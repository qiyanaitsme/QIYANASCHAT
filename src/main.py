from model import QIYANAModel
from interface import Interface
from utils import ChatUtils
from config import MODEL_CONFIG
from tqdm import tqdm
import time


class ChatApplication:
    def __init__(self):
        self.utils = ChatUtils()
        self.utils.setup_directories()
        self.utils.setup_logging()

        self.interface = Interface()
        self.interface.display_welcome_menu()

        self.model = QIYANAModel(MODEL_CONFIG["path"])
        self.chat_history = []

    def run(self):
        while True:
            user_input = input("\nüë§ –í—ã: ").strip()

            if not user_input:
                print("\n‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!")
                continue

            if user_input.lower() == 'exit':
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!\n")
                break

            if user_input.lower() == 'save':
                filename = self.utils.save_chat_history(self.chat_history)
                print(f"\nüìù –î–∏–∞–ª–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {filename}")
                continue

            self.chat_history.append(f"–í—ã: {user_input}")

            print("\n‚ö° –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞: ")
            for i in tqdm(range(10), desc="ü§î –û–±—Ä–∞–±–æ—Ç–∫–∞", ncols=100):
                time.sleep(0.1)

            response = self.model.generate_response(user_input)
            formatted_response = self.utils.format_code_blocks(response)
            print(f"\nü§ñ –ú–æ–¥–µ–ª—å:\n{formatted_response}\n")
            self.chat_history.append(f"–ú–æ–¥–µ–ª—å: {formatted_response}")

            print("-" * 50)


if __name__ == "__main__":
    app = ChatApplication()
    app.run()
